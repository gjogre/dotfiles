(defwindow eww-gjogre
  :monitor 0
  :geometry (geometry
              :y "20%"
              :x "0"
              :height "100%"
              :width "11%"
              :anchor "right center")
  :stacking "fg"
  :exclusive "true"
  :wm-ignore false
  :namespace "eww-gjogre-main"
  :windowtype "dock"
  (box :orientation "v" :space-evenly false
       (top-sidepanel)
       (middle-sidepanel)
       (bottom-sidepanel)))

(defwidget top-sidepanel []
  (box :orientation "v" :space-evenly false
       :class "top-sidepanel"
       (clock)
       (weather)))

(defwidget middle-sidepanel []
  (box :orientation "v" :space-evenly false
       :class "middle-sidepanel"
       :valign "center"
       :vexpand true
       (workspace-widget)
       (window-title)
    )
)

(defwidget bottom-sidepanel []
  (box :orientation "v" :space-evenly false
       :valign "end"
       :class "bottom-sidepanel"
       (sys-info)
       (toggle-suspend)))

(defvar hypridlestatus "󱀒")

(defwidget toggle-suspend []
  (button :onclick "eww update hypridlestatus=$(./scripts/toggle_hypridle.sh)"
          :class {hypridlestatus == "󱀒" ? "active" : "suspended"}
          (label :text "${hypridlestatus}")))

(defpoll time :interval "5s" "date +'%H:%M'")
(defpoll date :interval "20s" "date +'%a %d.%m.%Y'")

(defwidget clock []
  (box
   :orientation "v"
   :spacing 5
   (label :class "clock" :valign "start" :text "${time}")
   (label :class "date" :valign "start" :text "${date}")))

(deflisten workspace-listen
  :initial "{\"monitors\": [], \"special\": []}"
  "./scripts/workspaces.sh")

  (defwidget workspace-widget []
    (workspace-column :monitor-id "1"))

  (defwidget workspace-column [monitor-id]
    (box
        :orientation "h"
        :valign "center"
        :spacing 10
        :class "workspace-column"
        (for monitor in "${workspace-listen?.monitors}"
            (box
                :orientation "v"
                :valign "end"
                :class "monitor-column"
                (workspace-list :wslist "${monitor?.workspaces}")
            )
        )
        (box :visible "${workspace-listen.special[0] == "null" ? "false":"true"}"
            (workspace-list :wslist "${workspace-listen?.special}")
        )
    )
)

(defwidget window-title []
    (label
        :class "window-title"
        :text "${workspace-listen?.title}"
    )
)

(defwidget workspace-list [wslist]
    (box
        :class "workspace-list"
        :orientation "v"
        :spacing 10
        (for ws in wslist
            (label
                :class `${ws.active == true ? "active" : ""}`
                :text "${ws.name}"
            )
        )
    )
)


(defpoll gpu-info :interval "2s" "./scripts/gpuinfo.sh")

(defpoll weatherpoll :interval "100s" "./scripts/wittr.sh")

(defwidget weather []
  (box :orientation "v" :spacing 10
       (label :text "${weatherpoll}")))

(defwidget sys-info []
  (box
    :orientation "v"
    :spacing 5
    :valign "end"
    :class "thermometer-details"
    (box
        :orientation "h"
        :valign "start"
        :halign "center"
        :class "cpu-temperature"
        (label
            :text "󰍛 ${round(EWW_CPU.avg, 0)}% ${round(EWW_TEMPS.K10TEMP_TCTL, 0)}󰔄")
        )
    (box
        :orientation "h"
        :valign "start"
        :halign "center"
        :class "gpu-usage"
        (label
            :text "󱡶 ${gpu-info}")
        )
    (box
        :orientation "h"
        :valign "start"
        :halign "center"
        :class "ram-usage"
        (label
            :text "  ${round(EWW_RAM.used_mem_perc,0)}%")
        )
    )
)
